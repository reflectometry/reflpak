source paktest.tcl

proc ftranspose.test {} {

  try {
    # Check that transpose works
    fvector s {1 2 3 4 5 6}
    ftranspose 2 3 s
    assert_vector s {1 3 5 2 4 6}
  }

  try {
    # Check that transpose doesn't touch copy
    fvector s {1 2 3 4 5 6}
    set t $s
    ftranspose 2 3 t
    assert_vector s {1 2 3 4 5 6}
    assert_vector t {1 3 5 2 4 6}
  }

  try {
    # Check that we can transpose a subrange
    set u [string range $s 8 end]
    assert_vector u {3 4 5 6}
    ftranspose 2 2 u
    assert_vector u {3 5 4 6}
    assert_vector s {1 2 3 4 5 6}
  }

  try {
     # Check that we can put the data in a tcl array
     fvector q(1) {1 2 3 4 5 6}
     ftranspose 2 3 q(1)
     assert_vector q(1) {1 3 5 2 4 6}
  }

  fail {
    set t [binary format d* {1 2 3 4 5 6}]
    ftranspose 2 3 t
  } with "ftranspose: wrong number of elements in t; try \[binary format f* \$data]"

  fail {
    fvector t {1 2 3 4 5}
    ftranspose 2 3 t
  } with "ftranspose: wrong number of elements in t"

  fail {
    set t "a[binary format f* {1 2 3 4 5 6}]"
    ftranspose 2 3 t
  } with "ftranspose: expected binary format in t"

  fail {ftranspose 2 3 z} with "ftranspose: expected variable name for x"
  fail {
    fvector q(1) {1 2 3 4 5 6}
    ftranspose 2 3 q
  } with "ftranspose: expected variable name for x"
  fail {
    set g {1 2 3 4 5 6}
    ftranspose 2 3 g
  } with "ftranspose: expected binary format in g"
  fail {ftranspose 2 3 {1 2 3}} with "ftranspose: expected variable name for x"
}

ftranspose.test
