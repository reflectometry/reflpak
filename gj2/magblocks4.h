#if defined(COMMENT) && !defined(COMMENT)

  TO USE GNUPLOT from a Kermit-based PC:  Type "setenv GNUTERM kc"
  before running j2!!!!


 Program fits up to 9 layer reflectivity using algorithm of
 L.G. Parratt, Phys. Rev. 95, 359 (1954) to calculate reflectivity and
 Levenberg-Marquardt non-linear least squares fit routines from
 William H. Press, Brian P. Flannery, Saul A. Teukolsky, and William T.
 Vetterling, Numerical Recipes (Cambridge University Press, Cambridge,
 1986), ch. 14.
 John Ankner 3 January 1989

 The main program MAGBLOCKS is organized as a command loop.  A 2-4 character
 string is entered into variable COMMAND at the % prompt and the program
 matches the entered command to those in the command loop and takes the
 appropriate action.  This structure allows a great deal of flexibility
 in developing new features but suffers from the disadvantage that, over
 time, one tends to accumulate a number of useless or obsolete commands.
 However, knowing from bitter experience that, if I remove something, the
 program will fail in mysterious and exciting ways, I will include the
 whole mess and give some editorial guidance as to which sections are
 important.  What follows is an alphabetical list of the available commands.

-------------------------------------------------------------------------------
                             LIST OF COMMANDS
-------------------------------------------------------------------------------

 AU    Enter goniometer angular uncertainty.  A semi-bogus way to incorporate
       the effect of goniometer gear stepping uncertainty into the calculation
       of the reflectivity error bars.  This number represents the estimated
       angular accuracy of the gear in radians (a typical number is
       0.005 degrees = 8.73e-5 radians).

 BI    Enter intensity of incident beam (multiplies calculated reflectivity
       to give count rate).

 BK    Enter constant background intensity added to calculated intensity.

 CRU   Calculate angular uncertainty for logarithm of the reflectivity.
       Using the angular uncertainty entered
       by means of the AU command, it modifies the error bars of the data
       input using GD to include the effect of variations of goniometer
       stepping.  I have never used this on published data, but it is amusing
       to play around with.  Requires a fairly good estimate of the fit
       parameters before use.

 CSR   Calculate chi-squared for logarithm of reflectivity.

 CSS   Calculate chi-squared for spin asymmetry.

 CSU   Same as CRU, except that it calculates angular uncertainty for
       spin asymmetry.

 Dn    Enter thickness of nth layer.

 EX    Exit the program and save parameters to file maglayer.sta

 FR5   Fit up to five layer logarithm of reflectivity to data stored in IF.

 FS5   Fit up to five-layer spin asymmetry to data stored in IF.

 GD    Get data from filename entered using IF command.  The data is assumed
       to be in three-column format with the first column being the momentum
       transfer (Q=4 PI sin THETA/LAMBDA), the second column either the
       logarithm of the counts or the spin asymmetry, and the third column
       the uncertainty (error bar).

 GR    Generate unconvoluted logarithm of reflectivity.

 IF    Enter name of input file.

 LD    Enter the wavelength divergence of the incident beam (in Angstroms)
       to be used in the resolution convolution.

 LID   List the data entered by GD and the fit generated by any of the
       fit commands.

 MUn   Enter the length absorption coefficient for layer n.

 NL    Enter number of layers (between 1 and 9).

 NP    Enter number of data points (automatically done by GD).

 OF    Enter output file name.

 QCn   Enter nuclear (or x-ray) critical Q squared of layer n.

 QL    Enter Q limits of data set (automatically done by GD).

 QMn   Enter magnetic critical Q squared of layer n.

 RD    Calculate derivative of log(reflectivity) w.r.t. pth fit parameter (p
       will be requested in a prompt) [See following list of parameters].

 ROn   Enter interfacial roughness at top of layer n.

 SD    Same as RD for spin asymmetry.

 SRF   Save fit to log(reflectivity) in file name entered in OF.  Written in
       two-column format:  first column is Q=4 PI sin THETA/LAMBDA, second
       is fit.

 SSF   Same as SRF for spin asymmetry.

 TD    Enter the angular divergence of the incident beam (in radians) to be
       used in the resolution convolution.

 VAnm  Toggle status of nmth fit parameter.  Toggles between varied and fixed
       in the fit.

 VE    Print out current values of fit parameters on screen.

 WL    Enter wavelength of incident radiation.

-------------------------------------------------------------------------------
                             FIT PARAMETER NUMBERS
-------------------------------------------------------------------------------

 For the purposes of bookkeeping in the fit routines, the entered parameters
 have corresponding sequential fit parameter numbers.  These parameters are
 transferred back and forth in function DREFDA and in subroutine REFSHIFT.
 Right now, I only fit 5 layer reflectivity parameters---it is trivial to
 modify the above routines to include more or different parameters.  What
 follows is a list of the current definitions.

       Fit Parameter Number            Entered Parameter
       --- --------- ------            ------- ---------

               0                   Reflectivity or spin asymmetry
                                          (not entered)
               1                               BK
               2                               BI
               3                               QC1
               4                               QC2
               5                               QC3
       -------------------------------------------------
               6                               QC4
               7                               QC5
               8                               D1
               9                               D2
               10                              D3
       -------------------------------------------------
               11                              D4
               12                              SI1
               13                              SI2
               14                              SI3
               15                              SI4
       -------------------------------------------------
               16                              SI5
               17                              QM1
               18                              QM2
               19                              QM3
               20                              QM4
       -------------------------------------------------
               21                              QM5
#endif /* COMMENT */


#ifndef _MAGBLOCKS4_H
#define _MAGBLOCKS4_H

void magblocks4_init(void);
void magblocks4(void);

#endif /* _MAGBLOCKS4_H */

