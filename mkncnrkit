#! /bin/sh

# Type ./mkncnrkit for build instructions


# Customize the following for your installation:
DQKIT=dqkit/dqkit
SDX="$DQKIT sdx.kit"
VERSION=1p1
REFLFIT=~/cvs/reflfit

ARCH=`uname -s`
WINDOWS=MINGW32_NT-5.0
if test x$ARCH = x$WINDOWS; then
    # windows things
    TCLLIB=/c/Tcl/lib
    EXE=.exe
    BINDRES=$REFLFIT/win/bindres.sh
    RC=windres
    NEED_TKTABLE=1
    NEED_TKDND=1
else
    host=`hostname`; host=${host%%.*}
    TCLLIB=dqkit/install/$host/lib
fi

# package versions for directories in your install
# tree; note that we do some trimming of the tree
# that we copy so if you are changing version
# numbers, check the code below to make sure that
# everything is being deleted that needs to be.
BWIDGET=BWidget-1.7.0
TKTABLE=Tktable2.8
TKDND=tkdnd1.0

# tkcon is special since it is not usually distributed
# as a package but instead as a stand-alone binary. If
# you have at least version 2.4, we can make it into
# a package by adding a pkgIndex.tcl file.  Point the
# variable TKCON to the location of your tkcon and set
# TKCONVER to the version number.
TKCON=tkcon.tcl
TKCONVER=2.4


# Show docs if no input
test x$1 != xdoit && less <<EOF && exit
ncnrpack is a starkit containing the following:

	Tcl/Tk BLT Tktable BWidget Tkcon Tkdnd

Constructing it takes some effort.  Once it is constructed, 
then it can be used for a variety of NCNR programs, though 
those too may need to be built from source.

You will need the following sources in the same directory:

dqkit0.4 (dqkit-sources-0.4.tar.gz, not dqkit-core-sources-0.4.tar.gz)
	http://sourceforge.net/project/showfiles.php?group_id=99106

sdx.kit:
        http://www.equi4.com/pub/sk/sdx.kit

$BWIDGET:
	http://sourceforge.net/project/showfiles.php?group_id=12883

tkdnd1.0:
	http://sourceforge.net/project/showfiles.php?group_id=13167

tkcon.tcl (latest):
  http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/tkcon/tkcon/tkcon.tcl?rev=HEAD


Note there is mkstemp bug on IRIX systems which you may need 
to patch to src/tclxxx tree of dqkit. Try building dqkit, and if
that fails, search google for:

	"workaround for buggy(??) mkstemp() on IRIX systems" 

To rebuild dqkit, do the following:

        tar xzf dqkit-sources-0.4.tar.gz
        cd dqkit
	vi gen/buildkit
	* comment out the line containing upx
	* search for the string '[conf::x g++] -static' and remove '-static'
	* include "IRIX64 { array set X {make gmake} }" near NetBSD
        [osx] (cd noarch/include && ln -s ../../src/tk-8.4.5/xlib/X11 .)
        gen/buildkit build -tk -tcl -blt -tktable
        cp bin/*/* dqkit$EXE
        cd ..

Next we need to extend to make $BWIDGET available:

        tar xzf $BWIDGET.tar.gz

Presumably $TKDND is similar. I didn't build it myself for windows,
it doesn't work for me under linux.

Customize this file (mkncnrlib) to point to your tcl tree and 
the correct versions of the various packages.

Once everything is ready, build the kit:

	$REFLFIT/mkncnrkit doit

The resulting ncnrpack can now be used to wrap your own applications,
but you will have to make a copy before doing so.
E.g.,

   mkdir myapp.vfs
   echo "package require starkit;starkit::startup;puts hi" > myapp.vfs/main.tcl
   cp ncnrpack$VERSION$EXE ncnrpack$EXE
   ncnrpack sdx.kit wrap myapp$EXE -runtime ncnrpack$VERSION$EXE
   ./myapp

EOF

set -x

# clear out any old build kits
rm -rf ncnrpack$VERSION.vfs

# expose the base package tree
$SDX unwrap $DQKIT$EXE
mv dqkit.vfs ncnrpack$VERSION.vfs
kitlib=ncnrpack$VERSION.vfs/lib

# add bwidget (without docs)
mkdir $kitlib/$BWIDGET
cp $BWIDGET/*.tcl $kitlib/$BWIDGET
cp -r $BWIDGET/images $BWIDGET/lang $kitlib/$BWIDGET
cp $BWIDGET/{README,LICENSE}.txt $kitlib/$BWIDGET

# add TkTable (without docs or static lib)
if test -n "$NEED_TKTABLE" ; then
    cp -r $TCLLIB/$TKTABLE $kitlib
    rm -rf $kitlib/$TKTABLE/html
    rm $kitlib/$TKTABLE/*.{a,lib}
fi

# add Tkcon (with pkgIndex.tcl)
mkdir $kitlib/tkcon$TKCONVER
cp $TKCON $kitlib/tkcon$TKCONVER
cat > $kitlib/tkcon$TKCONVER/pkgIndex.tcl <<EOF
package ifneeded tkcon $TKCONVER [subst {
    namespace eval ::tkcon {}
    set ::tkcon::PRIV(showOnStartup) 0
    set ::tkcon::PRIV(protocol) {tkcon hide}
    set ::tkcon::OPT(exec) ""
    package require Tk
    tclPkgSetup [list \$dir] tkcon $TKCONVER {
	{tkcon.tcl source {tkcon dump idebug observe}}
    }
}]
EOF

# add tkdnd (if needed, without docs)
if test -n "$NEED_TKDND" ; then
    cp -r $TCLLIB/$TKDND $kitlib
    rm -rf $kitlib/$TKDND/html
    rm -rf $kitlib/$TKDND/demo
fi

## Now we need to recombine our kit into ncnrpack

# duplicate the kit so that you can use it to split itself
cp $DQKIT$EXE dqkitcopy$EXE
# split of the dqkit runtime
$SDX mksplit dqkitcopy$EXE
# recombine with the extended ncnrpack
$SDX wrap ncnrpack$VERSION$EXE -runtime dqkitcopy.head
rm dqkitcopy$EXE

## On windows we will want to rebrand this.
if test x$ARCH = x$WINDOWS ; then
    (cd $REFLFIT/win && $RC ncnrpack.rc ncnrpack.res)
    mv $REFLFIT/win/ncnrpack.res .
    $BINDRES ncnrpack$VERSION.exe ncnrpack.res
fi
